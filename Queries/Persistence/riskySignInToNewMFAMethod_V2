// This query was updated from https://github.com/Azure/Azure-Sentinel/tree/master/Hunting%20Queries/Microsoft%20365%20Defender/Persistence/riskySignInToNewMFAMethod.yaml
//**Version 2.0 created by kddx017831**
//**Added OSPlatform specification,logonDistributionCountry and logonDistributionDevice queries.**
let mfaMethodAdded=CloudAppEvents
| where ActionType =~ "Update user." 
| where RawEventData has "StrongAuthenticationPhoneAppDetail"
| where isnotempty(RawEventData.ObjectId) and isnotempty(RawEventData.Target[1].ID)
| extend AccountUpn = tostring(RawEventData.ObjectId)
| extend AccountObjectId = tostring(RawEventData.Target[1].ID)
| project MfaAddedTimestamp=Timestamp,AccountUpn,AccountObjectId;
let usersWithNewMFAMethod=mfaMethodAdded
| distinct AccountObjectId;
let hasusersWithNewMFAMethod = isnotempty(toscalar(usersWithNewMFAMethod));
let riskySignins=AADSignInEventsBeta
| where hasusersWithNewMFAMethod
| where AccountObjectId in (usersWithNewMFAMethod)
| where RiskLevelDuringSignIn in ("50","100") //Medium and High sign-in risk level.
| where Application in ("Office 365 Exchange Online", "OfficeHome")
| where isnotempty(SessionId)
|where OSPlatform == "Linux" 
| project SignInTimestamp=Timestamp, Application, SessionId, AccountObjectId, IPAddress,RiskLevelDuringSignIn,OSPlatform
| summarize SignInTimestamp=argmin(SignInTimestamp,*) by Application, AccountObjectId, IPAddress,RiskLevelDuringSignIn,OSPlatform;
let logonDistributionCountry = AADSignInEventsBeta 
| where Timestamp > ago(7d)
| where AccountObjectId in (usersWithNewMFAMethod)
| summarize count() by AccountObjectId, Country
| extend p = pack(Country, tostring(count_))
| summarize logonDistributionByCountry=make_bag(p) by AccountObjectId;
// get logon device distribution from all users involved in the alerts
let logonDistributionDevice = AADSignInEventsBeta 
| where Timestamp > ago(7d)
| where AccountObjectId in (usersWithNewMFAMethod)
| summarize count() by AccountObjectId, DeviceName
| extend p = pack(DeviceName, tostring(count_))
| summarize logonDistributionByDevice=make_bag(p) by AccountObjectId;
// join all and look at the time shortly after die alerts and check for logon countries and devices while filtering AADjoined devices
mfaMethodAdded
| join riskySignins on AccountObjectId
|join logonDistributionCountry on AccountObjectId
|join logonDistributionDevice on AccountObjectId
| where MfaAddedTimestamp - SignInTimestamp < 6h //Time delta between risky sign-in and device registration less than 6h
| project-away AccountObjectId1v
